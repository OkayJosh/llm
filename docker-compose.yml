version: '3'

services:
  # Django app service
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./staticfiles:/llm/staticfiles
    depends_on:
      - db
      - redis
      - celery_worker
      - celery_beat
    command: ["./entrypoint.sh"]
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT}/0

  # Celery Worker service
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile  # I used the same Dockerfile as the web app
    command: celery -A llm worker --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT}/0
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

  # Celery Beat service
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile  # I used the same Dockerfile as the web app
    command: celery -A llm beat --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT}/0
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

  # PostgreSQL database service
  db:
    image: postgres:latest
    volumes:
      - "./.local/postgres:/var/lib/postgresql/data:delegated"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"

  # Redis service
  redis:
    image: redis:latest
    command: ["redis-server", "--port", "${REDIS_PORT}"]
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

volumes:
  postgres_data: {}
