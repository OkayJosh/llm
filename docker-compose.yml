version: '3'

services:
  # Django app service
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: llm:latest
    ports:
      - "8000:8000"
    volumes:
      - ./staticfiles:/llm/staticfiles
      - var_run_llm:/var/run/llm
    depends_on:
      - db
      - redis
    command: ["/llm/docker/entrypoint.sh"]
    env_file:
      - .env

  # Celery Worker service
  celery_worker:
    image: llm:latest
    command: ["/llm/docker/celery.worker.entrypoint.sh"]
    depends_on:
      - redis
      - db
    volumes:
      - var_run_llm:/var/run/llm
    env_file:
      - .env

  # Celery Beat service
  celery_beat:
    image: llm:latest
    command: ["/llm/docker/celery.beat.entrypoint.sh"]
    depends_on:
      - redis
      - db
    volumes:
      - var_run_llm:/var/run/llm
    env_file:
      - .env

  # PostgreSQL database service
  db:
    image: postgres:latest
    volumes:
      - "./.local/postgres:/var/lib/postgresql/data:delegated"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  # Redis service
  redis:
    image: redis:latest
    command: ["redis-server", "--port", "${REDIS_PORT}"]
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  # Grafana service
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3004:3000"  # Map port 3004 on the host to port 3000 in the container
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:3000/api/health"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

volumes:
  postgres_data: {}
  var_run_llm: {}
  grafana_data: {}
