apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: GF_SECURITY_ADMIN_USER
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: GF_SECURITY_ADMIN_PASSWORD
        - name: GF_DATABASE_TYPE
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: GF_DATABASE_TYPE
        - name: GF_DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: GF_DATABASE_HOST
        - name: GF_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: GF_DATABASE_NAME
        - name: GF_DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: GF_DATABASE_USER
        - name: GF_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: GF_DATABASE_PASSWORD
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/for/grafana"
